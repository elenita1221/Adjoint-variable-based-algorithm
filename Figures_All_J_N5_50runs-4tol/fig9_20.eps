%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The MathWorks, Inc. Version 7.14.0.739 (R2012a). Operating System: Microsoft Windows 7.
%%Title: Figures_All_J_N5_50runs-4tol\fig9_20.eps
%%CreationDate: 01/11/2015  20:19:01
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:    66   215   545   602
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    66   215   545   602
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0204 7344 csm

  594   110  5743  4650 MR c np
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6913 5185 PR
6 w
0 4225 5356 0 0 -4225 899 4614 4 MP
PP
-5356 0 0 4225 5356 0 0 -4225 899 4614 5 MP stroke
4 w
DO
SO
6 w
0 sg
 899  389 mt 6255  389 L
 899 4614 mt 6255 4614 L
6255 4614 mt 6255  389 L
 899 4614 mt  899  389 L
 899 4614 mt 6255 4614 L
 899 4614 mt  899  389 L
 899 4614 mt  899 4560 L
 899  389 mt  899  442 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 866 4759 mt 
(0) s
1434 4614 mt 1434 4560 L
1434  389 mt 1434  442 L
1351 4759 mt 
(0.1) s
1970 4614 mt 1970 4560 L
1970  389 mt 1970  442 L
1887 4759 mt 
(0.2) s
2505 4614 mt 2505 4560 L
2505  389 mt 2505  442 L
2422 4759 mt 
(0.3) s
3041 4614 mt 3041 4560 L
3041  389 mt 3041  442 L
2958 4759 mt 
(0.4) s
3577 4614 mt 3577 4560 L
3577  389 mt 3577  442 L
3494 4759 mt 
(0.5) s
4112 4614 mt 4112 4560 L
4112  389 mt 4112  442 L
4029 4759 mt 
(0.6) s
4648 4614 mt 4648 4560 L
4648  389 mt 4648  442 L
4565 4759 mt 
(0.7) s
5183 4614 mt 5183 4560 L
5183  389 mt 5183  442 L
5100 4759 mt 
(0.8) s
5719 4614 mt 5719 4560 L
5719  389 mt 5719  442 L
5636 4759 mt 
(0.9) s
6255 4614 mt 6255 4560 L
6255  389 mt 6255  442 L
6222 4759 mt 
(1) s
 899 4614 mt  952 4614 L
6255 4614 mt 6201 4614 L
 594 4658 mt 
(-800) s
 899 4144 mt  952 4144 L
6255 4144 mt 6201 4144 L
 594 4188 mt 
(-600) s
 899 3675 mt  952 3675 L
6255 3675 mt 6201 3675 L
 594 3719 mt 
(-400) s
 899 3205 mt  952 3205 L
6255 3205 mt 6201 3205 L
 594 3249 mt 
(-200) s
 899 2736 mt  952 2736 L
6255 2736 mt 6201 2736 L
 798 2780 mt 
(0) s
 899 2266 mt  952 2266 L
6255 2266 mt 6201 2266 L
 664 2310 mt 
(200) s
 899 1797 mt  952 1797 L
6255 1797 mt 6201 1797 L
 664 1841 mt 
(400) s
 899 1327 mt  952 1327 L
6255 1327 mt 6201 1327 L
 664 1371 mt 
(600) s
 899  858 mt  952  858 L
6255  858 mt 6201  858 L
 664  902 mt 
(800) s
 899  389 mt  952  389 L
6255  389 mt 6201  389 L
 598  433 mt 
(1000) s
 899  389 mt 6255  389 L
 899 4614 mt 6255 4614 L
6255 4614 mt 6255  389 L
 899 4614 mt  899  389 L
gs 899 389 5357 4226 MR c np
DD
24 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
134 470 268 552 268 -186 268 -721 268 -765 267 -421 268 56 268 517 
268 831 268 763 267 209 268 -498 268 -813 268 -576 268 -130 267 168 
268 286 268 298 268 157 268 -105 133 -124 899 2736 22 MP stroke
134 -53 268 -116 268 -135 268 -121 268 -48 267 71 268 199 268 293 
268 308 268 215 267 33 268 -168 268 -290 268 -288 268 -191 267 -69 
268 27 268 81 268 105 268 112 133 56 899 2736 22 MP stroke
134 719 268 949 268 -42 268 -962 268 -1291 267 -890 268 -83 268 705 
268 1161 268 1010 267 188 268 -791 268 -1120 268 -600 268 146 267 534 
268 584 268 472 268 104 268 -474 133 -389 899 2736 22 MP stroke
134 718 268 893 268 -158 268 -972 268 -1139 267 -750 268 -114 268 576 
268 1115 268 1095 267 312 268 -706 268 -1088 268 -636 268 23 267 351 
268 422 268 410 268 172 268 -302 133 -281 899 2736 22 MP stroke
134 447 268 545 268 -126 268 -637 268 -720 267 -439 268 -3 268 427 
268 709 268 646 267 178 268 -402 268 -656 268 -458 268 -90 267 163 
268 267 268 266 268 117 268 -134 133 -134 899 2736 22 MP stroke
134 522 268 635 268 -163 268 -796 268 -918 267 -557 268 25 268 608 
268 987 268 888 267 212 268 -624 268 -963 268 -620 268 -45 267 303 
268 393 268 350 268 135 268 -210 133 -197 899 2736 22 MP stroke
134 -56 268 -123 268 -145 268 -132 268 -66 267 51 268 196 268 331 
268 392 268 310 267 84 268 -187 268 -360 268 -363 268 -246 267 -100 
268 8 268 76 268 120 268 148 133 79 899 2736 22 MP stroke
134 385 268 448 268 -216 268 -783 268 -843 267 -339 268 355 268 823 
268 918 268 650 267 46 268 -656 268 -998 268 -728 268 -107 267 392 
268 559 268 437 268 118 268 -258 133 -215 899 2736 22 MP stroke
134 406 268 505 268 -80 268 -521 268 -628 267 -462 268 -140 268 269 
268 620 268 655 267 266 268 -273 268 -532 268 -387 268 -88 267 105 
268 172 268 171 268 79 268 -86 133 -87 899 2736 22 MP stroke
134 19 268 -29 268 -155 268 -223 268 -170 267 -10 268 194 268 380 
268 462 268 362 267 80 268 -248 268 -437 268 -404 268 -226 267 -43 
268 71 268 117 268 120 268 104 133 47 899 2736 22 MP stroke
134 199 268 200 268 -192 268 -489 268 -474 267 -157 268 267 268 577 
268 662 268 473 267 43 268 -440 268 -678 268 -533 268 -162 267 166 
268 310 268 277 268 115 268 -79 133 -84 899 2736 22 MP stroke
134 258 268 304 268 -93 268 -384 268 -447 267 -323 268 -74 268 267 
268 572 268 607 267 266 268 -225 268 -497 268 -416 268 -164 267 26 
268 99 268 109 268 78 268 21 133 -6 899 2736 22 MP stroke
134 14 268 -5 268 -67 268 -109 268 -111 267 -69 268 20 268 151 
268 274 268 300 267 179 268 -30 268 -204 268 -258 268 -207 267 -123 
268 -56 268 4 268 74 268 142 133 86 899 2736 22 MP stroke
134 668 268 856 268 -128 268 -998 268 -1208 267 -683 268 142 268 781 
268 1032 268 812 267 109 268 -721 268 -1051 268 -655 268 28 267 479 
268 620 268 527 268 138 268 -435 133 -364 899 2736 22 MP stroke
134 346 268 421 268 -99 268 -501 268 -582 267 -379 268 -31 268 340 
268 595 268 554 267 174 268 -303 268 -519 268 -377 268 -88 267 114 
268 195 268 191 268 88 268 -78 133 -82 899 2736 22 MP stroke
134 345 268 384 268 -188 268 -591 268 -632 267 -396 268 -11 268 467 
268 870 268 862 267 292 268 -468 268 -826 268 -600 268 -151 267 129 
268 204 268 198 268 133 268 5 133 -34 899 2736 22 MP stroke
134 180 268 194 268 -131 268 -386 268 -409 267 -193 268 141 268 442 
268 575 268 445 267 71 268 -346 268 -543 268 -420 268 -126 267 120 
268 221 268 195 268 81 268 -57 133 -60 899 2736 22 MP stroke
134 541 268 679 268 -116 268 -767 268 -913 267 -568 268 0 268 530 
268 833 268 720 267 155 268 -518 268 -777 268 -489 268 -13 267 288 
268 391 268 352 268 116 268 -257 133 -225 899 2736 22 MP stroke
134 483 268 606 268 -73 268 -569 268 -669 267 -481 268 -171 268 200 
268 535 268 601 267 275 268 -207 268 -448 268 -335 268 -89 267 73 
268 146 268 168 268 88 268 -86 133 -91 899 2736 22 MP stroke
134 378 268 467 268 -114 268 -625 268 -768 267 -471 268 76 268 602 
268 871 268 708 267 115 268 -564 268 -834 268 -542 268 -20 267 326 
268 400 268 297 268 64 268 -216 133 -175 899 2736 22 MP stroke
134 682 268 897 268 -56 268 -936 268 -1237 267 -832 268 -42 268 706 
268 1118 268 954 267 167 268 -761 268 -1083 268 -598 268 122 267 515 
268 575 268 460 268 99 268 -448 133 -366 899 2736 22 MP stroke
134 512 268 669 268 -44 268 -687 268 -901 267 -604 268 -24 268 520 
268 794 268 648 267 102 268 -512 268 -734 268 -438 268 46 267 361 
268 443 268 346 268 55 268 -337 133 -266 899 2736 22 MP stroke
134 -70 268 -132 268 -116 268 -81 268 -15 267 77 268 173 268 246 
268 258 268 185 267 37 268 -125 268 -230 268 -242 268 -175 267 -80 
268 1 268 56 268 90 268 107 133 56 899 2736 22 MP stroke
134 469 268 581 268 -96 268 -591 268 -677 267 -456 268 -109 268 272 
268 580 268 600 267 234 268 -265 268 -501 268 -364 268 -92 267 88 
268 172 268 195 268 104 268 -87 133 -95 899 2736 22 MP stroke
134 501 268 633 268 -80 268 -648 268 -798 267 -567 268 -129 268 368 
268 738 268 719 267 226 268 -395 268 -648 268 -410 268 -21 267 210 
268 280 268 257 268 88 268 -194 133 -171 899 2736 22 MP stroke
134 122 268 159 268 -9 268 -142 268 -187 267 -154 268 -72 268 44 
268 162 268 219 267 164 268 28 268 -99 268 -151 268 -133 267 -94 
268 -57 268 -16 268 42 268 97 133 61 899 2736 22 MP stroke
134 773 268 1011 268 -97 268 -1133 268 -1450 267 -883 268 89 268 895 
268 1264 268 1036 267 156 268 -904 268 -1295 268 -735 268 130 267 618 
268 704 268 576 268 143 268 -523 133 -436 899 2736 22 MP stroke
134 671 268 884 268 -112 268 -1134 268 -1452 267 -781 268 325 268 1110 
268 1322 268 983 267 95 268 -993 268 -1475 268 -930 268 90 267 759 
268 864 268 609 268 90 268 -550 133 -430 899 2736 22 MP stroke
134 540 268 647 268 -181 268 -799 268 -900 267 -575 268 -49 268 548 
268 1025 268 1000 267 299 268 -619 268 -1000 268 -646 268 -65 267 260 
268 335 268 313 268 148 268 -156 133 -162 899 2736 22 MP stroke
134 131 268 151 268 -57 268 -209 268 -233 267 -156 268 -19 268 153 
268 303 268 329 267 175 268 -69 268 -242 268 -259 268 -175 267 -86 
268 -28 268 20 268 72 268 119 133 69 899 2736 22 MP stroke
134 118 268 131 268 -67 268 -205 268 -222 267 -152 268 -29 268 143 
268 313 268 363 267 215 268 -50 268 -250 268 -283 268 -202 267 -117 
268 -64 268 -9 268 81 268 174 133 107 899 2736 22 MP stroke
134 281 268 329 268 -140 268 -534 268 -602 267 -303 268 171 268 575 
268 737 268 558 267 66 268 -485 268 -728 268 -520 268 -89 267 246 
268 357 268 280 268 77 268 -159 133 -134 899 2736 22 MP stroke
134 729 268 947 268 -83 268 -985 268 -1228 267 -756 268 20 268 663 
268 959 268 785 267 124 268 -647 268 -925 268 -542 268 61 267 440 
268 575 268 517 268 137 268 -465 133 -388 899 2736 22 MP stroke
134 651 268 815 268 -123 268 -850 268 -1000 267 -656 268 -102 268 473 
268 893 268 859 267 248 268 -531 268 -834 268 -510 268 -12 267 268 
268 364 268 363 268 142 268 -268 133 -246 899 2736 22 MP stroke
134 534 268 642 268 -179 268 -813 268 -928 267 -582 268 -13 268 611 
268 1075 268 1016 267 275 268 -673 268 -1063 268 -684 268 -55 267 303 
268 381 268 339 268 145 268 -186 133 -183 899 2736 22 MP stroke
134 459 268 584 268 -79 268 -651 268 -821 267 -549 268 -29 268 490 
268 788 268 675 267 139 268 -482 268 -714 268 -440 268 12 267 297 
268 366 268 295 268 70 268 -243 133 -200 899 2736 22 MP stroke
134 608 268 822 268 -31 268 -939 268 -1299 267 -804 268 150 268 914 
268 1160 268 851 267 52 268 -854 268 -1195 268 -693 268 159 267 691 
268 741 268 488 268 26 268 -515 133 -386 899 2736 22 MP stroke
134 222 268 261 268 -102 268 -411 268 -468 267 -238 268 136 268 449 
268 557 268 400 267 30 268 -364 268 -534 268 -386 268 -68 267 194 
268 288 268 222 268 49 268 -140 133 -113 899 2736 22 MP stroke
134 472 268 619 268 -47 268 -677 268 -900 267 -590 268 22 268 574 
268 812 268 627 267 65 268 -544 268 -758 268 -445 268 73 267 409 
268 473 268 338 268 34 268 -338 133 -257 899 2736 22 MP stroke
134 -33 268 -88 268 -133 268 -146 268 -97 267 11 268 157 268 303 
268 381 268 313 267 96 268 -168 268 -335 268 -334 268 -218 267 -82 
268 15 268 71 268 107 268 131 133 69 899 2736 22 MP stroke
134 401 268 485 268 -114 268 -558 268 -645 267 -447 268 -92 268 348 
268 719 268 734 267 271 268 -354 268 -651 268 -472 268 -113 267 119 
268 194 268 191 268 99 268 -69 133 -80 899 2736 22 MP stroke
134 471 268 562 268 -195 268 -815 268 -931 267 -529 268 120 268 740 
268 1103 268 950 267 193 268 -732 268 -1113 268 -727 268 -51 267 369 
268 458 268 370 268 132 268 -207 133 -190 899 2736 22 MP stroke
134 564 268 684 268 -235 268 -1055 268 -1222 267 -632 268 283 268 1040 
268 1397 268 1151 267 193 268 -1008 268 -1524 268 -978 268 0 267 598 
268 679 268 501 268 144 268 -323 133 -279 899 2736 22 MP stroke
134 84 268 110 268 -6 268 -105 268 -137 267 -98 268 -14 268 71 
268 117 268 102 267 38 268 -40 268 -85 268 -79 268 -38 267 8 
268 36 268 37 268 16 268 -14 133 -14 899 2736 22 MP stroke
134 560 268 727 268 -109 268 -935 268 -1205 267 -705 268 188 268 920 
268 1200 268 918 267 94 268 -866 268 -1245 268 -756 268 90 267 616 
268 678 268 463 268 64 268 -413 133 -322 899 2736 22 MP stroke
134 502 268 594 268 -238 268 -921 268 -992 267 -439 268 311 268 852 
268 1041 268 807 267 115 268 -731 268 -1125 268 -790 268 -104 267 399 
268 567 268 484 268 165 268 -274 133 -246 899 2736 22 MP stroke
134 390 268 444 268 -208 268 -719 268 -788 267 -429 268 132 268 685 
268 1024 268 888 267 195 268 -656 268 -1027 268 -705 268 -107 267 285 
268 385 268 323 268 135 268 -128 133 -132 899 2736 22 MP stroke
134 763 268 967 268 -169 268 -1154 268 -1380 267 -794 268 118 268 875 
268 1259 268 1069 267 194 268 -890 268 -1306 268 -771 268 67 267 539 
268 645 268 564 268 185 268 -444 133 -389 899 2736 22 MP stroke
134 63 268 34 268 -146 268 -262 268 -232 267 -76 268 146 268 364 
268 484 268 401 267 106 268 -246 268 -443 268 -395 268 -203 267 -21 
268 81 268 117 268 112 268 89 133 38 899 2736 22 MP stroke
134 374 268 475 268 -39 268 -417 268 -510 267 -400 268 -190 268 105 
268 405 268 511 267 295 268 -84 268 -319 268 -287 268 -123 267 6 
268 66 268 85 268 54 268 -18 133 -30 899 2736 22 MP stroke
SO
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
134 390 268 481 268 -118 268 -616 268 -726 267 -431 268 54 268 506 
268 767 268 666 267 159 268 -468 268 -742 268 -505 268 -63 267 230 
268 318 268 277 268 102 268 -160 133 -148 899 2736 22 MP stroke
gr

24 w
c9
0 sg
2035  294 mt 
(Crossections of the target forcing function versus its mean) s
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
